# If using a dedicated output directory:
dist/
build/

# If not using a dedicated output directory:
*.js
*.js.map

Node Modules

If you're using npm or Yarn to manage your project's dependencies, you'll have a node_modules/ directory. This should always be excluded as it can contain thousands of files, and you donâ€™t want those in your repo.

node_modules/

IDE and Editor Configurations

Many IDEs and editors create configuration and cache files that are specific to a user's environment. Examples include .vscode/ for Visual Studio Code and .idea/ for JetBrains IDEs.

.vscode/
.idea/

Environment Configuration

Files that contain secrets, API keys, or database connection info (commonly .env files or other configuration files) should never be committed to a public repository.

.env
.env.local
.env.*.local

TypeScript Cache

TypeScript might generate cache files when using project references or when incremental compilation is enabled.

*.tsbuildinfo

Other Common Exclusions

Other files and directories that are commonly excluded in many JavaScript and TypeScript projects include:

# Log files
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (<https://gruntjs.com/creating-plugins#storing-task-files>)
.grunt

# Bower dependency directory (<https://bower.io/>)
bower_components

# Dependency directory
# Commenting this out is preferred by some developers, npm can
# handle it properly when it's symlinked (npm v3+)
# node_modules/

# TSD Debug info
tsd-debug.log
.env