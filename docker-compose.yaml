services:
  jp_main:
    build: .
    container_name: jp_main_c
    ports:
      - '3001:3001'
    environment:
      KAFKA_BROKER: redpanda:29092
    depends_on:
      - redpanda
      - postgres
      - mongodb
    env_file:
      - .env
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: senha_segura
    networks:
      - app-network

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: senha_segura
    networks:
      - app-network

  redpanda:
    image: docker.redpanda.com/vectorized/redpanda:v22.2.2
    container_name: joao_pechincha_broker
    command:
      - redpanda start
      - --kafka-addr PLAINTEXT://0.0.0.0:29092
      - --advertise-kafka-addr PLAINTEXT://redpanda:29092
    ports:
      - 29092:29092
    networks:
      - app-network

  console:
    container_name: joao_pechincha_console
    image: docker.redpanda.com/vectorized/console:master-173596f
    environment:
      KAFKA_BROKERS: redpanda:29092
    ports:
      - 8080:8080
    depends_on:
      - redpanda
    networks:
      - app-network

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "redpanda:29092"
    depends_on:
      - "redpanda"
    networks:
      - app-network

volumes:
  mongo_data:

networks:
  app-network:
    driver: bridge